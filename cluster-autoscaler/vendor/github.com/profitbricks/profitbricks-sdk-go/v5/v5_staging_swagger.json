{
  "swagger": "2.0",
  "info": {
    "description": "An enterprise-grade Infrastructure is provided as a Service (IaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API. \n\nThe API allows you to perform a variety of management tasks such as spinning up additional servers, adding volumes, adjusting networking, and so forth. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.",
    "version": "5.0",
    "title": "CLOUD API"
  },
  "host": "localhost",
  "basePath": "/cloudapi/v5",
  "tags": [
    {
      "name": "Server"
    },
    {
      "name": "Contract"
    },
    {
      "name": "Data Center"
    },
    {
      "name": "Nic"
    },
    {
      "name": "User Management"
    },
    {
      "name": "Image"
    },
    {
      "name": "IP Blocks"
    },
    {
      "name": "Lan"
    },
    {
      "name": "Load Balancer"
    },
    {
      "name": "Location"
    },
    {
      "name": "Private Cross Connect"
    },
    {
      "name": "Request"
    },
    {
      "name": "/"
    },
    {
      "name": "Snapshot"
    },
    {
      "name": "Volume"
    },
    {
      "name": "Backup Unit"
    },
    {
      "name": "Label"
    },
    {
      "name": "Kubernetes"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/datacenters/{datacenterId}/servers/{serverId}/volumes": {
      "get": {
        "tags": [
          "Server"
        ],
        "summary": "List Attached Volumes",
        "description": "You can retrieve a list of volumes attached to the server",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AttachedVolumes"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Server"
        ],
        "summary": "Attach a volume",
        "description": "This will attach a pre-existing storage volume to the server. It is also possible to create and attach a volume in one step just by providing a new volume description as payload. Combine count of Nics and volumes attached to the server should not exceed size 24.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "volume",
            "description": "Volume to be attached (created and attached)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/volumes/{volumeId}": {
      "get": {
        "tags": [
          "Server"
        ],
        "summary": "Retrieve an attached volume",
        "description": "This will retrieve the properties of an attached volume.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the Volume",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Server"
        ],
        "summary": "Detach a volume",
        "description": "This will detach the volume from the server. This will not delete the volume from your datacenter. You will need to make a separate request to perform a deletion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the Volume",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/cdroms/{cdromId}": {
      "get": {
        "tags": [
          "Server"
        ],
        "summary": "Retrieve an attached CD-ROM",
        "description": "You can retrieve a specific CD-ROM attached to the server",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "cdromId",
            "in": "path",
            "description": "The unique ID of the CD-ROM",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Image"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Server"
        ],
        "summary": "Detach a CD-ROM",
        "description": "This will detach a CD-ROM from the server",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "cdromId",
            "in": "path",
            "description": "The unique ID of the CD-ROM",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/cdroms": {
      "get": {
        "tags": [
          "Server"
        ],
        "summary": "List attached CD-ROMs ",
        "description": "You can retrieve a list of CD-ROMs attached to the server.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Cdroms"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Server"
        ],
        "summary": "Attach a CD-ROM",
        "description": "You can attach a CD-ROM to an existing server. You can attach up to 2 CD-ROMs to one server. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "cdrom",
            "description": "CD-ROM to be attached",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Image"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Image"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/contracts": {
      "get": {
        "tags": [
          "Contract"
        ],
        "summary": "Retrieve a Contract",
        "description": "Retrieves the attributes of user's contract.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Contract"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters": {
      "get": {
        "tags": [
          "Data Center"
        ],
        "summary": "List Data Centers under your account",
        "description": "You can retrieve a complete list of data centers provisioned under your account",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Datacenters"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Data Center"
        ],
        "summary": "Create a Data Center",
        "description": "Virtual data centers are the foundation of the platform. They act as logical containers for all other objects you will be creating, e.g. servers. You can provision as many data centers as you want. Datacenters have their own private network and are logically segmented from each other to create isolation. You can use this POST method to create a simple datacenter or to create a datacenter with multiple objects under it such as servers and storage volumes.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "datacenter",
            "description": "Datacenter to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Datacenter"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Datacenter"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}": {
      "get": {
        "tags": [
          "Data Center"
        ],
        "summary": "Retrieve a Data Center",
        "description": "You can retrieve a data center by using the resource's ID. This value can be found in the response body when a datacenter is created or when you GET a list of datacenters.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Datacenter"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Data Center"
        ],
        "summary": "Modify a Data Center",
        "description": "You can use update datacenter to re-name the datacenter or update its description",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "datacenter",
            "description": "Modified Data Center",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Datacenter"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Datacenter"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Data Center"
        ],
        "summary": "Delete a Data Center",
        "description": "Will remove all objects within the datacenter and remove the datacenter object itself, too. This is a highly destructive method which should be used with caution",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Data Center"
        ],
        "summary": "Partially modify a Data Center",
        "description": "You can use update datacenter to re-name the datacenter or update its description",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "datacenter",
            "description": "Modified properties of Data Center",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatacenterProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Datacenter"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/nics/{nicId}/firewallrules": {
      "get": {
        "tags": [
          "Nic"
        ],
        "summary": "List Firewall Rules ",
        "description": "Retrieves a list of firewall rules associated with a particular NIC",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FirewallRules"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Nic"
        ],
        "summary": "Create a Firewall Rule",
        "description": "This will add a Firewall Rule to the NIC",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "firewallrule",
            "description": "Firewall Rule to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/nics/{nicId}/firewallrules/{firewallruleId}": {
      "get": {
        "tags": [
          "Nic"
        ],
        "summary": "Retrieve a Firewall Rule",
        "description": "Retrieves the attributes of a given Firewall Rule.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC",
            "required": true,
            "type": "string"
          },
          {
            "name": "firewallruleId",
            "in": "path",
            "description": "The unique ID of the Firewall Rule",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Nic"
        ],
        "summary": "Modify a Firewall Rule",
        "description": "You can use update attributes of a resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC",
            "required": true,
            "type": "string"
          },
          {
            "name": "firewallruleId",
            "in": "path",
            "description": "The unique ID of the Firewall Rule",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "firewallrule",
            "description": "Modified Firewall Rule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Nic"
        ],
        "summary": "Delete a Firewall Rule",
        "description": "Removes the specific Firewall Rule",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC",
            "required": true,
            "type": "string"
          },
          {
            "name": "firewallruleId",
            "in": "path",
            "description": "The unique ID of the Firewall Rule",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Nic"
        ],
        "summary": "Partially modify a Firewall Rule",
        "description": "You can use update attributes of a resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC",
            "required": true,
            "type": "string"
          },
          {
            "name": "firewallruleId",
            "in": "path",
            "description": "The unique ID of the Firewall Rule",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "firewallrule",
            "description": "Modified Firewall Rule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallruleProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/groups": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "List All Groups.",
        "description": "You can retrieve a complete list of all groups that you have access to",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Groups"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Create a Group",
        "description": "You can use this POST method to create a group",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "group",
            "description": "Group to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Group"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/groups/{groupId}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retrieve a Group",
        "description": "You can retrieve a group by using the group ID. This value can be found in the response body when a group is created or when you GET a list of groups.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Groups"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Modify a group",
        "description": "You can use this method to update properties of the group.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Group",
            "description": "Modified properties of the Group",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Group"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User Management"
        ],
        "summary": "Delete a Group",
        "description": "Delete a group",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/groups/{groupId}/resources": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retrieve resources assigned to a group",
        "description": "",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceGroups"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/groups/{groupId}/users": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "List Group Members ",
        "description": "You can retrieve a list of users who are members of the group",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GroupMembers"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Add a user to a group",
        "description": "This will attach a pre-existing user to a group. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "user",
            "description": "User to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/groups/{groupId}/users/{userId}": {
      "delete": {
        "tags": [
          "User Management"
        ],
        "summary": "Remove a user from a group",
        "description": "This will remove a user from a group",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/groups/{groupId}/shares/{resourceId}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retrieve a group share",
        "description": "This will retrieve the properties of a group share.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GroupShare"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Add a resource to a group",
        "description": "This will add a resource to the group. ",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "Resource to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupShare"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GroupShare"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Modify resource permissions of a group",
        "description": "You can use update resource permissions of a group. If empty body will be provided, no updates will happen, instead you will be returned the current permissions of resource in a group. In this case response code will be 200",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "Modified Resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupShare"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GroupShare"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User Management"
        ],
        "summary": "Remove a resource from a group",
        "description": "This will remove a resource from a group",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/groups/{groupId}/shares": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "List Group Shares ",
        "description": "You can retrieve a list of all resources along with their permissions of the group",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GroupShares"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/images": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "List Images ",
        "description": "Retrieve a list of images within the datacenter",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Images"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/images/{imageId}": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Retrieve an Image",
        "description": "Retrieves the attributes of a given image.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Image"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Image"
        ],
        "summary": "Modify an Image",
        "description": "You can use update attributes of a resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "image",
            "description": "Modified Image",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Image"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Image"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Image"
        ],
        "summary": "Delete an Image",
        "description": "Deletes the specified image. This operation is permitted on private image only.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Image"
        ],
        "summary": "Partially modify an Image",
        "description": "You can use update attributes of a resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "image",
            "description": "Modified Image",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Image"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/ipblocks": {
      "get": {
        "tags": [
          "IP Blocks"
        ],
        "summary": "List IP Blocks ",
        "description": "Retrieve a list of all reserved IP Blocks",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IpBlocks"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "IP Blocks"
        ],
        "summary": "Reserve IP Block",
        "description": "This will reserve a new IP Block",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ipblock",
            "description": "IP Block to be reserved",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpBlock"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IpBlock"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/ipblocks/{ipblockId}": {
      "get": {
        "tags": [
          "IP Blocks"
        ],
        "summary": "Retrieve an IP Block",
        "description": "Retrieves the attributes of a given IP Block.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IpBlock"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "IP Blocks"
        ],
        "summary": "Modify IP Block",
        "description": "You can use update attributes of a resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "ipblock",
            "description": "IP Block to be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpBlock"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IpBlock"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "IP Blocks"
        ],
        "summary": "Delete IP Block",
        "description": "Removes the specific IP Block",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "patch": {
        "tags": [
          "IP Blocks"
        ],
        "summary": "Partially modify IP Block",
        "description": "You can use update attributes of a resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "ipblock",
            "description": "IP Block to be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpBlockProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IpBlock"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/lans": {
      "get": {
        "tags": [
          "Lan"
        ],
        "summary": "List Lans",
        "description": "Retrieve a list of LANs within the datacenter",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Lans"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Lan"
        ],
        "summary": "Create a Lan",
        "description": "Creates a LAN within the datacenter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "lan",
            "description": "Lan to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LanPost"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LanPost"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/lans/{lanId}": {
      "get": {
        "tags": [
          "Lan"
        ],
        "summary": "Retrieve a Lan",
        "description": "Retrieves the attributes of a given LAN",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "lanId",
            "in": "path",
            "description": "The unique ID of the LAN",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Lan"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Lan"
        ],
        "summary": "Modify a Lan",
        "description": "You can use update attributes of a resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "lanId",
            "in": "path",
            "description": "The unique ID of the LAN",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "lan",
            "description": "Modified Lan",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Lan"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Lan"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Lan"
        ],
        "summary": "Delete a Lan.",
        "description": "Removes the specific Lan",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "lanId",
            "in": "path",
            "description": "The unique ID of the LAN",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Lan"
        ],
        "summary": "Partially modify a Lan",
        "description": "You can use update attributes of a resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "lanId",
            "in": "path",
            "description": "The unique ID of the LAN",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "lan",
            "description": "Modified Lan",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LanProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Lan"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/lans/{lanId}/nics": {
      "get": {
        "tags": [
          "Lan"
        ],
        "summary": "List Lan Members ",
        "description": "You can retrieve a list of nics attached to a lan",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "lanId",
            "in": "path",
            "description": "The unique ID of the LAN",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LanNics"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Lan"
        ],
        "summary": "Attach a nic",
        "description": "This will attach a pre-existing nic to a lan. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "lanId",
            "in": "path",
            "description": "The unique ID of the LAN",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nic",
            "description": "Nic to be attached",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Nic"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/lans/{lanId}/nics/{nicId}": {
      "get": {
        "tags": [
          "Lan"
        ],
        "summary": "Retrieve a nic attached to lan",
        "description": "This will retrieve the properties of an attached nic.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "lanId",
            "in": "path",
            "description": "The unique ID of the LAN",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/loadbalancers": {
      "get": {
        "tags": [
          "Load Balancer"
        ],
        "summary": "List Load Balancers",
        "description": "Retrieve a list of Load Balancers within the datacenter",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Loadbalancers"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Load Balancer"
        ],
        "summary": "Create a Load Balancer",
        "description": "Creates a Loadbalancer within the datacenter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "loadbalancer",
            "description": "Loadbalancer to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Loadbalancer"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Loadbalancer"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/loadbalancers/{loadbalancerId}": {
      "get": {
        "tags": [
          "Load Balancer"
        ],
        "summary": "Retrieve a loadbalancer",
        "description": "Retrieves the attributes of a given Loadbalancer",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Loadbalancer"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Load Balancer"
        ],
        "summary": "Modify a Load Balancer",
        "description": "You can use update attributes of a resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Loadbalancer",
            "description": "Modified Loadbalancer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Loadbalancer"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Loadbalancer"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Load Balancer"
        ],
        "summary": "Delete a Loadbalancer.",
        "description": "Removes the specific Loadbalancer",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Load Balancer"
        ],
        "summary": "Partially modify a Loadbalancer",
        "description": "You can use update attributes of a resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Loadbalancer",
            "description": "Modified Loadbalancer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoadbalancerProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Loadbalancer"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/loadbalancers/{loadbalancerId}/balancednics": {
      "get": {
        "tags": [
          "Load Balancer"
        ],
        "summary": "List Load Balancer Members ",
        "description": "You can retrieve a list of nics attached to a Load Balancer",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BalancedNics"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Load Balancer"
        ],
        "summary": "Attach a nic to Load Balancer",
        "description": "This will attach a pre-existing nic to a Load Balancer. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nic",
            "description": "Nic id to be attached",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Nic"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/loadbalancers/{loadbalancerId}/balancednics/{nicId}": {
      "get": {
        "tags": [
          "Load Balancer"
        ],
        "summary": "Retrieve a nic attached to Load Balancer",
        "description": "This will retrieve the properties of an attached nic.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Load Balancer"
        ],
        "summary": "Detach a nic from loadbalancer",
        "description": "This will remove a nic from Load Balancer",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/locations": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "List Locations",
        "description": "Retrieve a list of Locations. This list represents where you can provision your virtual data centers",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Locations"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/locations/{regionId}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "List Locations within a region",
        "description": "Retrieve a list of Locations within a world's region",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Locations"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/locations/{regionId}/{locationId}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Retrieve a Location",
        "description": "Retrieves the attributes of a given location",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Location"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/nics": {
      "get": {
        "tags": [
          "Nic"
        ],
        "summary": "List Nics ",
        "description": "Retrieves a list of NICs.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Nics"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Nic"
        ],
        "summary": "Create a Nic",
        "description": "Adds a NIC to the target server. Combine count of Nics and volumes attached to the server should not exceed size 24.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nic",
            "description": "Nic to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Nic"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/nics/{nicId}": {
      "get": {
        "tags": [
          "Nic"
        ],
        "summary": "Retrieve a Nic",
        "description": "Retrieves the attributes of a given NIC",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Nic"
        ],
        "summary": "Modify a Nic",
        "description": "You can use update attributes of a Nic",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Nic",
            "description": "Modified Nic",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Nic"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Nic"
        ],
        "summary": "Delete a Nic",
        "description": "Deletes the specified NIC.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Nic"
        ],
        "summary": "Partially modify a Nic",
        "description": "You can use update attributes of a Nic",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Nic",
            "description": "Modified properties of Nic",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NicProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/pccs": {
      "get": {
        "tags": [
          "Private Cross Connect"
        ],
        "summary": "List Private Cross-Connects ",
        "description": "You can retrieve a complete list of private cross-connects provisioned under your account",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCrossConnects"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Private Cross Connect"
        ],
        "summary": "Create a Private Cross-Connect",
        "description": "You can use this POST method to create a private cross-connect",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pcc",
            "description": "Private Cross-Connect to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateCrossConnect"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCrossConnect"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/pccs/{pccId}": {
      "get": {
        "tags": [
          "Private Cross Connect"
        ],
        "summary": "Retrieve a Private Cross-Connect",
        "description": "You can retrieve a private cross-connect by using the resource's ID. This value can be found in the response body when a private cross-connect is created or when you GET a list of private cross-connects.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pccId",
            "in": "path",
            "description": "The unique ID of the private cross-connect",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCrossConnect"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Private Cross Connect"
        ],
        "summary": "Delete a Private Cross-Connect",
        "description": "Delete a private cross-connect if no datacenters are joined to the given PCC",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pccId",
            "in": "path",
            "description": "The unique ID of the private cross-connect",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Private Cross Connect"
        ],
        "summary": "Partially modify a private cross-connect",
        "description": "You can use update private cross-connect to re-name or update its description",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pccId",
            "in": "path",
            "description": "The unique ID of the private cross-connect",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pcc",
            "description": "Modified properties of private cross-connect",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateCrossConnectProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCrossConnect"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/requests/{requestId}/status": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Retrieve Request Status",
        "description": "Retrieves the status of a given request.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RequestStatus"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/requests/{requestId}": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Retrieve a Request",
        "description": "Retrieves the attributes of a given request.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Request"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/requests": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "List Requests",
        "description": "Retrieve a list of API requests.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "name": "filter.status",
            "in": "query",
            "description": "Request status filter to fetch all the request based on a particular status [QUEUED, RUNNING, DONE, FAILED]",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdAfter",
            "in": "query",
            "description": "Filter all the requests after the created date",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdBefore",
            "in": "query",
            "description": "Filter all the requests before the created date",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Requests"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/resources/{resourceType}/{resourceId}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retrieve a Resource by type.",
        "description": "You can retrieve a resource by using the type and its uuid. Allowed values for types are { datacenter, snapshot, image, ipblock, pcc, backupunit, k8s }. The value of resource type can also be found in the response body when you GET a list of all resources.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "The resource Uuid",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Resource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/resources/{resourceType}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retrieve a list of Resources by type.",
        "description": "You can retrieve a list of resources by using the type. Allowed values are { datacenter, snapshot, image, ipblock, pcc, backupunit, k8s }. This value of resource type also be found in the response body when you GET a list of all resources.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource Type",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Resources"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/resources": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "List All Resources.",
        "description": "You can retrieve a complete list of all resources that you have access to",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Resources"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/": {
      "get": {
        "tags": [
          "/"
        ],
        "summary": "Display API information",
        "description": "Display API information",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Info"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        }
      }
    },
    "/datacenters/{datacenterId}/servers": {
      "get": {
        "tags": [
          "Server"
        ],
        "summary": "List Servers ",
        "description": "You can retrieve a list of servers within a datacenter",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "name": "upgradeNeeded",
            "in": "query",
            "description": "It can be used to filter which servers can be upgraded which can not be upgraded.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Servers"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Server"
        ],
        "summary": "Create a Server",
        "description": "Creates a server within an existing datacenter. You can configure the boot volume and connect the server to an existing LAN.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "server",
            "description": "Server to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Server"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}": {
      "get": {
        "tags": [
          "Server"
        ],
        "summary": "Retrieve a Server",
        "description": "Returns information about a server such as its configuration, provisioning status, etc.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Server"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Server"
        ],
        "summary": "Modify a Server",
        "description": "Allows to modify the attributes of a Server. From v5 onwards 'allowReboot' attribute will no longer be available. For certain server property change it was earlier forced to be provided. Now this behaviour is implicit and backend will do this automatically e.g. in earlier versions, when CPU family changes, the 'allowReboot' property was required to be set to true which will no longer be the case and the server will be rebooted automatically",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "server",
            "description": "Modified Server",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Server"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Server"
        ],
        "summary": "Delete a Server",
        "description": "This will remove a server from your datacenter; however, it will not remove the storage volumes attached to the server. You will need to make a separate API call to perform that action",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Server"
        ],
        "summary": "Partially modify a Server",
        "description": "You can use update attributes of a server",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "server",
            "description": "Modified properties of Server",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Server"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/reboot": {
      "post": {
        "tags": [
          "Server"
        ],
        "summary": "Reboot a Server",
        "description": "This will force a hard reboot of the server. Do not use this method if you want to gracefully reboot the machine. This is the equivalent of powering off the machine and turning it back on.",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/start": {
      "post": {
        "tags": [
          "Server"
        ],
        "summary": "Start a Server",
        "description": "This will start a server. If the server's public IP was deallocated then a new IP will be assigned",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/stop": {
      "post": {
        "tags": [
          "Server"
        ],
        "summary": "Stop a Server",
        "description": "This will stop a server. The machine will be forcefully powered off, billing will cease, and the public IP, if one is allocated, will be deallocated. The operation is not supported for CoreVPS servers.",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/upgrade": {
      "post": {
        "tags": [
          "Server"
        ],
        "summary": "Upgrade a Server",
        "description": "This will upgrade the version of the server, if needed. To verify if there is an upgrade available for a server, call '/datacenters/{datacenterId}/servers?upgradeNeeded=true'",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/snapshots": {
      "get": {
        "tags": [
          "Snapshot"
        ],
        "summary": "List Snapshots ",
        "description": "Retrieve a list of available snapshots.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Snapshots"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/snapshots/{snapshotId}": {
      "get": {
        "tags": [
          "Snapshot"
        ],
        "summary": "Retrieve a Snapshot by its uuid.",
        "description": "Retrieves the attributes of a given Snapshot.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the Snapshot",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Snapshot"
        ],
        "summary": "Modify a Snapshot",
        "description": "You can use update attributes of a resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the Snapshot",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Snapshot",
            "description": "Modified Snapshot",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Snapshot"
        ],
        "summary": "Delete a Snapshot",
        "description": "Deletes the specified Snapshot.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the Snapshot",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Snapshot"
        ],
        "summary": "Partially modify a Snapshot",
        "description": "You can use this method to update attributes of a Snapshot.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the Snapshot",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Snapshot",
            "description": "Modified Snapshot",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/users": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "List all Users ",
        "description": "You can retrieve a complete list of users under your account",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Create a user",
        "description": "You can use this POST method to create a user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/users/{userId}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retrieve a User",
        "description": "You can retrieve user details by using the users ID. This value can be found in the response body when a user is created or when you GET a list of users.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Modify a user",
        "description": "You can use update attributes of a User",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "User",
            "description": "Modified user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User Management"
        ],
        "summary": "Delete a User",
        "description": "Delete a user",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/users/{userId}/groups": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retrieve a User's group resources",
        "description": "You can retrieve group resources of user by using the users ID. This value can be found in the response body when a user is created or when you GET a list of users.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceGroups"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/users/{userId}/owns": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retrieve a User's own resources",
        "description": "You can retrieve resources owned by using the users ID. This value can be found in the response body when a user is created or when you GET a list of users.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourcesUsers"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/users/{userId}/s3keys": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retrieve a User's S3 keys",
        "description": "You can retrieve S3 keys owned by a user by using the users ID. This user Id can be found in the response body when a user is created or when you GET a list of users.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/S3Keys"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Create a S3 key for the given user",
        "description": "Creates a S3 key for the given user. This user Id can be found in the response body when a user is created or when you GET a list of users. Maximum of 5 keys can be generated for a given user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/S3Key"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/users/{userId}/s3keys/{keyId}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retrieve given S3 key belonging to the given User",
        "description": "You can retrieve S3 key belonging to the given User. This user Id can be found in the response body when a user is created or when you GET a list of users. The key Id can be found in the response body when a S3 key is created or when you GET a list of all S3 keys of a user",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyId",
            "in": "path",
            "description": "The unique access key ID of the S3 key",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/S3Key"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Modify a S3 key having the given key id",
        "description": "You can enable or disable a given S3 key",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyId",
            "in": "path",
            "description": "The unique access key ID of the S3 key",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "User",
            "description": "Modified user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/S3Key"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/S3Key"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User Management"
        ],
        "summary": "Delete a S3 key",
        "description": "Delete a S3 key",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyId",
            "in": "path",
            "description": "The unique access key ID of the S3 key",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/um/users/{userId}/s3ssourl": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retrieve S3 object storage single signon URL for the given user",
        "description": "You can retrieve S3 object storage single signon URL for the given user. This user Id can be found in the response body when a user is created or when you GET a list of users.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/S3ObjectStorageSSO"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/volumes": {
      "get": {
        "tags": [
          "Volume"
        ],
        "summary": "List Volumes ",
        "description": "Retrieves a list of Volumes.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Volumes"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Volume"
        ],
        "summary": "Create a Volume",
        "description": "Creates a volume within the datacenter. This will not attach the volume to a server. Please see the Servers section for details on how to attach storage volumes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Volume",
            "description": "Volume to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/volumes/{volumeId}": {
      "get": {
        "tags": [
          "Volume"
        ],
        "summary": "Retrieve a Volume",
        "description": "Retrieves the attributes of a given Volume",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the Volume",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Volume"
        ],
        "summary": "Modify a Volume",
        "description": "You can use update attributes of a Volume",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the Volume",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Volume",
            "description": "Modified Volume",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Volume"
        ],
        "summary": "Delete a Volume",
        "description": "Deletes the specified volume. This will result in the volume being removed from your datacenter. Use this with caution.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the Volume",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Volume"
        ],
        "summary": "Partially modify a Volume",
        "description": "You can use update attributes of a Volume",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the Volume",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Volume",
            "description": "Modified properties of Volume",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/volumes/{volumeId}/restore-snapshot": {
      "post": {
        "tags": [
          "Volume"
        ],
        "summary": "Restore Volume Snapshot",
        "description": "This will restore a snapshot onto a volume. A snapshot is created as just another image that can be used to create subsequent volumes if you want or to restore an existing volume.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the Volume",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "This is the ID of the snapshot",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/volumes/{volumeId}/create-snapshot": {
      "post": {
        "tags": [
          "Volume"
        ],
        "summary": "Create Volume Snapshot",
        "description": "Creates a snapshot of a volume within the datacenter. You can use a snapshot to create a new storage volume or to restore a storage volume.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the Volume",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The name of the snapshot",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description of the snapshot",
            "required": false,
            "type": "string"
          },
          {
            "name": "secAuthProtection",
            "in": "formData",
            "description": "Flag representing if extra protection is enabled on snapshot e.g. Two Factor protection etc.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "licenceType",
            "in": "formData",
            "description": "The OS type of this Snapshot",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "WINDOWS",
              "WINDOWS2016",
              "LINUX",
              "OTHER"
            ]
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/backupunits": {
      "get": {
        "tags": [
          "Backup Unit"
        ],
        "summary": "List Backup Units ",
        "description": "You can retrieve a complete list of backup Units that you have access to.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BackupUnits"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Backup Unit"
        ],
        "summary": "Create a Backup Unit",
        "description": "Create a Backup Unit. A Backup Unit is considered a resource like a virtual datacenter, IP Block, snapshot, etc. It shall be shareable via groups inside our User Management Feature ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "backupUnit",
            "description": "Payload containing data to create a new Backup Unit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupUnit"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BackupUnit"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/backupunits/{backupunitId}": {
      "get": {
        "tags": [
          "Backup Unit"
        ],
        "summary": "Returns the specified backup Unit",
        "description": "You can retrieve the details of an specific backup unit.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "backupunitId",
            "in": "path",
            "description": "The unique ID of the backup unit",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BackupUnit"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Backup Unit"
        ],
        "summary": "Modify a Backup Unit",
        "description": "You can use update a backup Unit properties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "backupunitId",
            "in": "path",
            "description": "The unique ID of the backup unit",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "backup Unit",
            "description": "Modified backup Unit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupUnit"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BackupUnit"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Backup Unit"
        ],
        "summary": "Partially modify a Backup Unit",
        "description": "You can use update a backup Unit properties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "backupunitId",
            "in": "path",
            "description": "The unique ID of the backup unit",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "backup Unit properties",
            "description": "Modified backup Unit properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupUnitProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BackupUnit"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Backup Unit"
        ],
        "summary": "Delete a Backup Unit",
        "description": "NOTE: Running through the deletion process will delete: - the backup plans inside the Backup Unit. - all backups associated with the Backup Unit. - the backup user and finally also the unit",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "backupunitId",
            "in": "path",
            "description": "The unique ID of the backup Unit",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/backupunits/{backupunitId}/ssourl": {
      "get": {
        "tags": [
          "Backup Unit"
        ],
        "summary": "Returns a single signon URL for the specified backup Unit.",
        "description": "Returns a single signon URL for the specified backup Unit.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "backupunitId",
            "in": "path",
            "description": "The unique UUID of the backup unit",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BackupUnitSSO"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/labels": {
      "get": {
        "tags": [
          "Label"
        ],
        "summary": "List Labels ",
        "description": "You can retrieve a complete list of labels that you have access to.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Labels"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/labels/{labelurn}": {
      "get": {
        "tags": [
          "Label"
        ],
        "summary": "Returns the label by its URN.",
        "description": "You can retrieve the details of a specific label using its URN. A URN is for uniqueness of a Label and composed using urn:label:<resource_type>:<resource_uuid>:<key>",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "labelurn",
            "in": "path",
            "description": "The URN representing the unique ID of the label. A URN is for uniqueness of a Label and composed using urn:label:<resource_type>:<resource_uuid>:<key>",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Label"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/labels": {
      "get": {
        "tags": [
          "Label"
        ],
        "summary": "List all Data Center Labels",
        "description": "You can retrieve a list of all labels associated with a data center",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Data Center",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResources"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Label"
        ],
        "summary": "Add a Label to Data Center",
        "description": "This will add a label to the data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Data Center",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "Label to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/labels/{key}": {
      "get": {
        "tags": [
          "Label"
        ],
        "summary": "Retrieve a Label of Data Center",
        "description": "This will retrieve the properties of a associated label to a data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Data Center",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Label"
        ],
        "summary": "Modify a Label of Data Center",
        "description": "This will modify the value of the label on a data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Data Center",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "Modified Label",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Label"
        ],
        "summary": "Delete a Label from Data Center",
        "description": "This will remove a label from the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Data Center",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/labels": {
      "get": {
        "tags": [
          "Label"
        ],
        "summary": "List all Server Labels",
        "description": "You can retrieve a list of all labels associated with a server",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResources"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Label"
        ],
        "summary": "Add a Label to Server",
        "description": "This will add a label to the server.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "Label to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/labels/{key}": {
      "get": {
        "tags": [
          "Label"
        ],
        "summary": "Retrieve a Label of Server",
        "description": "This will retrieve the properties of a associated label to a server.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Label"
        ],
        "summary": "Modify a Label of Server",
        "description": "This will modify the value of the label on a server.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "Modified Label",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Label"
        ],
        "summary": "Delete a Label from Server",
        "description": "This will remove a label from the server.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the Server",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/volumes/{volumeId}/labels": {
      "get": {
        "tags": [
          "Label"
        ],
        "summary": "List all Volume Labels",
        "description": "You can retrieve a list of all labels associated with a volume",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the Volume",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResources"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Label"
        ],
        "summary": "Add a Label to Volume",
        "description": "This will add a label to the volume.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the Volume",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "Label to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/datacenters/{datacenterId}/volumes/{volumeId}/labels/{key}": {
      "get": {
        "tags": [
          "Label"
        ],
        "summary": "Retrieve a Label of Volume",
        "description": "This will retrieve the properties of a associated label to a volume.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the Volume",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Label"
        ],
        "summary": "Modify a Label of Volume",
        "description": "This will modify the value of the label on a volume.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the Volume",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "Modified Label",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Label"
        ],
        "summary": "Delete a Label from Volume",
        "description": "This will remove a label from the volume.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the Datacenter",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the Volume",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/snapshots/{snapshotId}/labels": {
      "get": {
        "tags": [
          "Label"
        ],
        "summary": "List all Snapshot Labels",
        "description": "You can retrieve a list of all labels associated with a snapshot",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the Snapshot",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResources"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Label"
        ],
        "summary": "Add a Label to Snapshot",
        "description": "This will add a label to the snapshot.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the Snapshot",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "Label to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/snapshots/{snapshotId}/labels/{key}": {
      "get": {
        "tags": [
          "Label"
        ],
        "summary": "Retrieve a Label of Snapshot",
        "description": "This will retrieve the properties of a associated label to a snapshot.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the Snapshot",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Label"
        ],
        "summary": "Modify a Label of Snapshot",
        "description": "This will modify the value of the label on a snapshot.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the Snapshot",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "Modified Label",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Label"
        ],
        "summary": "Delete a Label from Snapshot",
        "description": "This will remove a label from the snapshot.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the Snapshot",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/ipblocks/{ipblockId}/labels": {
      "get": {
        "tags": [
          "Label"
        ],
        "summary": "List all Ip Block Labels",
        "description": "You can retrieve a list of all labels associated with a IP Block",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "description": "The unique ID of the Ip Block",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResources"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Label"
        ],
        "summary": "Add a Label to IP Block",
        "description": "This will add a label to the Ip Block.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "description": "The unique ID of the Ip Block",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "Label to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/ipblocks/{ipblockId}/labels/{key}": {
      "get": {
        "tags": [
          "Label"
        ],
        "summary": "Retrieve a Label of IP Block",
        "description": "This will retrieve the properties of a associated label to a Ip Block.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "description": "The unique ID of the Ip Block",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Label"
        ],
        "summary": "Modify a Label of IP Block",
        "description": "This will modify the value of the label on a Ip Block.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "description": "The unique ID of the Ip Block",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "Modified Label",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Label"
        ],
        "summary": "Delete a Label from IP Block",
        "description": "This will remove a label from the Ip Block.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "description": "The unique ID of the Ip Block",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Label",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/k8s": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "List Kubernetes Clusters",
        "description": "You can retrieve a list of all kubernetes clusters associated with a contract",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesClusters"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Create Kubernetes Cluster",
        "description": "This will create a new Kubernetes Cluster.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "kubernetesClusterProperties",
            "description": "Properties of the Kubernetes Cluster",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesClusterProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/k8s/{k8sClusterId}": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve Kubernetes Cluster",
        "description": "This will retrieve a single Kubernetes Cluster.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Cluster",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Modify Kubernetes Cluster",
        "description": "This will modify the Kubernetes Cluster.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Cluster",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "kubernetescluster",
            "description": "Details of of the Kubernetes Cluster",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Delete Kubernetes Cluster",
        "description": "This will remove a Kubernetes Cluster.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Cluster",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/k8s/{k8sClusterId}/kubeconfig": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve Kubernetes Configuration File",
        "description": "You can retrieve kubernetes configuration file for the kubernetes cluster.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Cluster",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesConfig"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/k8s/{k8sClusterId}/nodepools": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "List Kubernetes Node Pools",
        "description": "You can retrieve a list of all kubernetes node pools part of kubernetes cluster",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Cluster",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesNodePools"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Create a Kubernetes Node Pool",
        "description": "This will create a new Kubernetes Node Pool inside a Kubernetes Cluster.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Cluster",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "KubernetesNodePoolProperties",
            "description": "Details of Kubernetes Node Pool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesNodePoolProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesNodePool"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/k8s/{k8sClusterId}/nodepools/{nodepoolId}": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve Kubernetes Node Pool",
        "description": "You can retrieve a single Kubernetes Node Pool.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Cluster",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Node Pool",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesNodePool"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Modify Kubernetes Node Pool",
        "description": "This will modify the Kubernetes Node Pool.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Cluster",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Node Pool",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "KubernetesNodePoolProperties",
            "description": "Details of the Kubernetes Node Pool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesNodePoolProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesNodePool"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Delete Kubernetes Node Pool",
        "description": "This will remove a Kubernetes Node Pool.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Cluster",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Node Pool",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/k8s/{k8sClusterId}/nodepools/{nodepoolId}/nodes": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve Kubernetes nodes.",
        "description": "You can retrieve all nodes of Kubernetes Node Pool.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Cluster",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Node Pool",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesNodes"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/k8s/{k8sClusterId}/nodepools/{nodepoolId}/nodes/{nodeId}": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve Kubernetes node",
        "description": "You can retrieve a single Kubernetes Node.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Cluster",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Node Pool",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Node.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesNode"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Delete Kubernetes node",
        "description": "This will remove a Kubernetes node.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Cluster",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Node Pool",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The unique ID of the Kubernetes node",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/k8s/{k8sClusterId}/nodepools/{nodepoolId}/nodes/{nodeId}/replace": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Recreate the Kubernetes node",
        "description": "You can recreate a single Kubernetes Node.\n\nManaged Kubernetes starts a process which based on the nodepool's template creates & configures a new node, waits for status \"ACTIVE\", and migrates all the pods from the faulty node, deleting it once empty. While this operation occurs, the nodepool will have an extra billable \"ACTIVE\" node.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Cluster",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Node Pool",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The unique ID of the Kubernetes Node.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "successful operation",
            "schema": {},
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/k8s/versions": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve available Kubernetes versions",
        "description": "You can retrieve a list of available kubernetes versions",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiErrorK8sVersion"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/k8s/versions/default": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve the current default kubernetes version for clusters and nodepools.",
        "description": "You can retrieve the current default kubernetes version for clusters and nodepools.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiErrorK8sVersion"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    },
    "/k8s/versions/{clusterVersion}/compatibilities": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieves a list of available kubernetes versions for nodepools depending on the given kubernetes version running in the cluster.",
        "description": "You can retrieve a list of available kubernetes versions for nodepools depending on the given kubernetes version running in the cluster.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clusterVersion",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum number of concurrent API requests allowed"
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Average number of requests allowed per minute"
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "Number of requests which can still be made without triggering a failure response. "
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiErrorK8sVersion"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "Basic Authentication": {
      "description": "You will need to base64 encode the string containing your credentials. Separate your username and password with a colon, i.e., username:password and send it as 'Authorization' request header. More details: https://en.wikipedia.org/wiki/Basic_access_authentication",
      "type": "basic"
    },
    "Token Authentication": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Please provide header value as 'Bearer <token>' and don't forget to add 'Bearer' HTTP Authorization Scheme before the token."
    }
  },
  "definitions": {
    "AttachedVolumes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Volume"
          }
        }
      }
    },
    "DatacenterElementMetadata": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "example": "45480eb3fbfc31f1d916c1eaa4abdcc3",
          "description": "Resource's Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11 . Entity Tag is also added as an 'ETag response header to requests which don't use 'depth' parameter. ",
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The last time the resource was created",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "example": "user@example.com",
          "description": "The user who created the resource.",
          "readOnly": true
        },
        "createdByUserId": {
          "type": "string",
          "example": "user@example.com",
          "description": "The user id of the user who has created the resource.",
          "readOnly": true
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The last time the resource has been modified",
          "readOnly": true
        },
        "lastModifiedBy": {
          "type": "string",
          "example": "user@example.com",
          "description": "The user who last modified the resource.",
          "readOnly": true
        },
        "lastModifiedByUserId": {
          "type": "string",
          "example": "63cef532-26fe-4a64-a4e0-de7c8a506c90",
          "description": "The user id of the user who has last modified the resource.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "example": "AVAILABLE",
          "description": "State of the resource. *AVAILABLE* There are no pending modification requests for this item; *BUSY* There is at least one modification request pending and all following requests will be queued; *INACTIVE* Resource has been de-provisioned; *DEPLOYING* Resource state DEPLOYING - relevant for Kubernetes cluster/nodepool; *ACTIVE* Resource state ACTIVE - relevant for Kubernetes cluster/nodepool; *FAILED* Resource state FAILED - relevant for Kubernetes cluster/nodepool; *SUSPENDED* Resource state SUSPENDED - relevant for Kubernetes cluster/nodepool; *FAILED_SUSPENDED* Resource state FAILED_SUSPENDED - relevant for Kubernetes cluster; *UPDATING* Resource state UPDATING - relevant for Kubernetes cluster/nodepool; *FAILED_UPDATING* Resource state FAILED_UPDATING - relevant for Kubernetes cluster/nodepool; *DESTROYING* Resource state DESTROYING - relevant for Kubernetes cluster; *FAILED_DESTROYING* Resource state FAILED_DESTROYING - relevant for Kubernetes cluster/nodepool; *TERMINATED* Resource state TERMINATED - relevant for Kubernetes cluster/nodepool",
          "readOnly": true,
          "enum": [
            "AVAILABLE",
            "INACTIVE",
            "BUSY",
            "DEPLOYING",
            "ACTIVE",
            "FAILED",
            "SUSPENDED",
            "FAILED_SUSPENDED",
            "UPDATING",
            "FAILED_UPDATING",
            "DESTROYING",
            "FAILED_DESTROYING",
            "TERMINATED"
          ]
        }
      }
    },
    "KubernetesNodeMetadata": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "example": "45480eb3fbfc31f1d916c1eaa4abdcc3",
          "description": "Resource's Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11 . Entity Tag is also added as an 'ETag response header to requests which don't use 'depth' parameter. ",
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The last time the resource was created",
          "readOnly": true
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The last time the resource has been modified",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "example": "AVAILABLE",
          "description": "State of the resource.",
          "readOnly": true,
          "enum": [
            "PROVISIONING",
            "PROVISIONED",
            "READY",
            "TERMINATING",
            "REBUILDING",
            "BUSY"
          ]
        },
        "lastSoftwareUpdatedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The last time the software updated on node.",
          "readOnly": true
        }
      }
    },
    "S3KeyMetadata": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "example": "45480eb3fbfc31f1d916c1eaa4abdcc3",
          "description": "Resource's Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11 . Entity Tag is also added as an 'ETag response header to requests which don't use 'depth' parameter. ",
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The time the S3 key was created",
          "readOnly": true
        }
      }
    },
    "NoStateMetaData": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "example": "45480eb3fbfc31f1d916c1eaa4abdcc3",
          "description": "Resource's Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11 . Entity Tag is also added as an 'ETag response header to requests which don't use 'depth' parameter. ",
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The time the Resource was created",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "example": "user@example.com",
          "description": "The user who has created the resource.",
          "readOnly": true
        },
        "createdByUserId": {
          "type": "string",
          "example": "user@example.com",
          "description": "The user id of the user who has created the resource.",
          "readOnly": true
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The last time the resource has been modified",
          "readOnly": true
        },
        "lastModifiedBy": {
          "type": "string",
          "example": "user@example.com",
          "description": "The user who last modified the resource.",
          "readOnly": true
        },
        "lastModifiedByUserId": {
          "type": "string",
          "example": "63cef532-26fe-4a64-a4e0-de7c8a506c90",
          "description": "The user id of the user who has last modified the resource.",
          "readOnly": true
        }
      }
    },
    "VolumeProperties": {
      "type": "object",
      "required": [
        "size"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "A name of that resource"
        },
        "type": {
          "type": "string",
          "example": "HDD",
          "description": "Hardware type of the volume.",
          "enum": [
            "HDD",
            "SSD",
            "SSD Standard",
            "SSD Premium"
          ]
        },
        "size": {
          "type": "number",
          "example": 100,
          "description": "The size of the volume in GB"
        },
        "availabilityZone": {
          "type": "string",
          "example": "AUTO",
          "description": "The availability zone in which the volume should exist. The storage volume will be provisioned on as less physical storages as possible but cannot guarantee upfront",
          "enum": [
            "AUTO",
            "ZONE_1",
            "ZONE_2",
            "ZONE_3"
          ]
        },
        "image": {
          "type": "string",
          "example": "d6ad1576-fde9-4696-aa41-1ebd75bdaf49",
          "description": "Image or snapshot ID to be used as template for this volume"
        },
        "imagePassword": {
          "type": "string",
          "example": "mypass123",
          "description": "Initial password to be set for installed OS. Works with public images only. Not modifiable, forbidden in update requests. Password rules allows all characters from a-z, A-Z, 0-9"
        },
        "sshKeys": {
          "type": "array",
          "example": [
            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345",
            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43"
          ],
          "description": "Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation.",
          "items": {
            "type": "string"
          }
        },
        "bus": {
          "type": "string",
          "example": "VIRTIO",
          "description": "The bus type of the volume. Default is VIRTIO",
          "enum": [
            "VIRTIO",
            "IDE"
          ]
        },
        "licenceType": {
          "type": "string",
          "example": "LINUX",
          "description": "OS type of this volume",
          "readOnly": true,
          "enum": [
            "UNKNOWN",
            "WINDOWS",
            "WINDOWS2016",
            "LINUX",
            "OTHER"
          ]
        },
        "cpuHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of CPU hot plug (no reboot required)",
          "readOnly": false
        },
        "ramHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of memory hot plug (no reboot required)",
          "readOnly": false
        },
        "nicHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of nic hot plug (no reboot required)",
          "readOnly": false
        },
        "nicHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of nic hot unplug (no reboot required)",
          "readOnly": false
        },
        "discVirtioHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of Virt-IO drive hot plug (no reboot required)",
          "readOnly": false
        },
        "discVirtioHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of Virt-IO drive hot unplug (no reboot required). This works only for non-Windows virtual Machines.",
          "readOnly": false
        },
        "deviceNumber": {
          "type": "integer",
          "format": "int64",
          "example": 3,
          "description": "The LUN ID of the storage volume. Null for volumes not mounted to any VM",
          "readOnly": true
        },
        "backupunitId": {
          "type": "string",
          "example": "25f67991-0f51-4efc-a8ad-ef1fb31a481c",
          "description": "The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provied either public image or imageAlias in conjunction with this property."
        }
      }
    },
    "Volume": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created",
          "readOnly": true,
          "example": "volume",
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/VolumeProperties"
        }
      }
    },
    "Cdroms": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Image"
          }
        }
      }
    },
    "Image": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created",
          "readOnly": true,
          "example": "image",
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/ImageProperties"
        }
      }
    },
    "ImageProperties": {
      "type": "object",
      "required": [
        "licenceType"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "A name of that resource"
        },
        "description": {
          "type": "string",
          "example": "Image/Snapshot of Ubuntu ",
          "description": "Human readable description"
        },
        "location": {
          "type": "string",
          "example": "us/las",
          "description": "Location of that image/snapshot. ",
          "readOnly": true
        },
        "size": {
          "type": "number",
          "example": 100,
          "description": "The size of the image in GB",
          "readOnly": true
        },
        "cpuHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of CPU hot plug (no reboot required)"
        },
        "cpuHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of CPU hot unplug (no reboot required)"
        },
        "ramHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of memory hot plug (no reboot required)"
        },
        "ramHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of memory hot unplug (no reboot required)"
        },
        "nicHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of nic hot plug (no reboot required)"
        },
        "nicHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of nic hot unplug (no reboot required)"
        },
        "discVirtioHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of Virt-IO drive hot plug (no reboot required)"
        },
        "discVirtioHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of Virt-IO drive hot unplug (no reboot required). This works only for non-Windows virtual Machines."
        },
        "discScsiHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of SCSI drive hot plug (no reboot required)"
        },
        "discScsiHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of SCSI drive hot unplug (no reboot required). This works only for non-Windows virtual Machines."
        },
        "licenceType": {
          "type": "string",
          "example": "LINUX",
          "description": "OS type of this Image",
          "enum": [
            "UNKNOWN",
            "WINDOWS",
            "WINDOWS2016",
            "LINUX",
            "OTHER"
          ]
        },
        "imageType": {
          "type": "string",
          "example": "HDD",
          "description": "This indicates the type of image",
          "readOnly": true,
          "enum": [
            "HDD",
            "CDROM"
          ]
        },
        "public": {
          "type": "boolean",
          "example": true,
          "description": "Indicates if the image is part of the public repository or not",
          "readOnly": true
        }
      }
    },
    "ContractProperties": {
      "type": "object",
      "properties": {
        "contractNumber": {
          "type": "integer",
          "format": "int64",
          "description": "contract number",
          "readOnly": true
        },
        "owner": {
          "type": "string",
          "description": "owner of the contract",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "status of the contract",
          "readOnly": true
        },
        "regDomain": {
          "type": "string",
          "description": "Registration domain of the contract",
          "readOnly": true
        },
        "resourceLimits": {
          "$ref": "#/definitions/ResourceLimits"
        }
      }
    },
    "Contract": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "type": {
          "type": "string",
          "example": "resource",
          "description": "The type of the resource",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "properties": {
          "$ref": "#/definitions/ContractProperties"
        }
      }
    },
    "ResourceLimits": {
      "type": "object",
      "required": [
        "coresPerContract",
        "coresPerServer",
        "coresProvisioned",
        "hddLimitPerContract",
        "hddLimitPerVolume",
        "hddVolumeProvisioned",
        "ramPerContract",
        "ramPerServer",
        "ramProvisioned",
        "reservableIps",
        "reservedIpsInUse",
        "reservedIpsOnContract",
        "ssdLimitPerContract",
        "ssdLimitPerVolume",
        "ssdVolumeProvisioned",
        "k8sClusterLimitTotal",
        "k8sClustersProvisioned"
      ],
      "properties": {
        "coresPerServer": {
          "type": "integer",
          "format": "int32",
          "description": "maximum number of cores per server"
        },
        "coresPerContract": {
          "type": "integer",
          "format": "int32",
          "description": "maximum cores per contract"
        },
        "coresProvisioned": {
          "type": "integer",
          "format": "int32",
          "description": "number of cores provisioned"
        },
        "ramPerServer": {
          "type": "integer",
          "format": "int32",
          "description": "maximum ram per server"
        },
        "ramPerContract": {
          "type": "integer",
          "format": "int32",
          "description": "maximum ram per contract"
        },
        "ramProvisioned": {
          "type": "integer",
          "format": "int32",
          "description": "ram provisioned"
        },
        "hddLimitPerVolume": {
          "type": "integer",
          "format": "int64",
          "description": "hdd limit per volume"
        },
        "hddLimitPerContract": {
          "type": "integer",
          "format": "int64",
          "description": "hdd limit per contract"
        },
        "hddVolumeProvisioned": {
          "type": "integer",
          "format": "int64",
          "description": "hdd volume provisioned"
        },
        "ssdLimitPerVolume": {
          "type": "integer",
          "format": "int64",
          "description": "ssd limit per volume"
        },
        "ssdLimitPerContract": {
          "type": "integer",
          "format": "int64",
          "description": "ssd limit per contract"
        },
        "ssdVolumeProvisioned": {
          "type": "integer",
          "format": "int64",
          "description": "ssd volume provisioned"
        },
        "reservableIps": {
          "type": "integer",
          "format": "int32",
          "description": "total reservable ip limit of the customer"
        },
        "reservedIpsOnContract": {
          "type": "integer",
          "format": "int32",
          "description": "reserved ips on a contract"
        },
        "reservedIpsInUse": {
          "type": "integer",
          "format": "int32",
          "description": "reserved ips in use"
        },
        "k8sClusterLimitTotal": {
          "type": "integer",
          "format": "int32",
          "description": "k8s clusters total limit"
        },
        "k8sClustersProvisioned": {
          "type": "integer",
          "format": "int32",
          "description": "k8s clusters provisioned"
        }
      }
    },
    "BalancedNics": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Nic"
          }
        }
      }
    },
    "DataCenterEntities": {
      "type": "object",
      "properties": {
        "servers": {
          "$ref": "#/definitions/Servers"
        },
        "volumes": {
          "$ref": "#/definitions/Volumes"
        },
        "loadbalancers": {
          "$ref": "#/definitions/Loadbalancers"
        },
        "lans": {
          "$ref": "#/definitions/Lans"
        }
      }
    },
    "DatacenterProperties": {
      "type": "object",
      "required": [
        "location"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "A name of that resource"
        },
        "description": {
          "type": "string",
          "example": "My Production Datacenter",
          "description": "A description for the datacenter, e.g. staging, production"
        },
        "location": {
          "type": "string",
          "example": "us/las",
          "description": "The physical location where the datacenter will be created. This will be where all of your servers live. Property cannot be modified after datacenter creation (disallowed in update requests)"
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "example": 8,
          "description": "The version of that Data Center. Gets incremented with every change",
          "readOnly": true
        },
        "features": {
          "type": "array",
          "example": "[SSD]",
          "description": "List of features supported by the location this data center is part of",
          "readOnly": true,
          "items": {
            "type": "string",
            "enum": [
              "SSD",
              "SSD_STORAGE_ZONING"
            ]
          }
        },
        "secAuthProtection": {
          "type": "boolean",
          "example": true,
          "description": "Boolean value representing if the data center requires extra protection e.g. two factor protection"
        }
      }
    },
    "Datacenter": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created",
          "readOnly": true,
          "example": "datacenter",
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/DatacenterProperties"
        },
        "entities": {
          "$ref": "#/definitions/DataCenterEntities"
        }
      }
    },
    "Datacenters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Datacenter"
          }
        }
      }
    },
    "FirewallRule": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created",
          "readOnly": true,
          "example": "firewall-rule",
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/FirewallruleProperties"
        }
      }
    },
    "FirewallRules": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/FirewallRule"
          }
        }
      }
    },
    "FirewallruleProperties": {
      "type": "object",
      "required": [
        "protocol"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "A name of that resource"
        },
        "protocol": {
          "type": "string",
          "example": "TCP",
          "description": "The protocol for the rule. Property cannot be modified after creation (disallowed in update requests)",
          "enum": [
            "TCP",
            "UDP",
            "ICMP",
            "ANY"
          ]
        },
        "sourceMac": {
          "type": "string",
          "example": "00:0a:95:9d:68:16",
          "description": "Only traffic originating from the respective MAC address is allowed. Valid format: aa:bb:cc:dd:ee:ff. Value null allows all source MAC address",
          "enum": [
            "@Valid MAC address@",
            "null"
          ]
        },
        "sourceIp": {
          "type": "string",
          "example": "22.231.113.64",
          "description": "Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs",
          "enum": [
            "@Valid IP address@",
            "null"
          ]
        },
        "targetIp": {
          "type": "string",
          "example": "22.231.113.64",
          "description": "In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed. Value null allows all target IPs",
          "enum": [
            "@Valid IP address@",
            "null"
          ]
        },
        "icmpCode": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "description": "Defines the allowed code (from 0 to 254) if protocol ICMP is chosen. Value null allows all codes",
          "minimum": 0,
          "maximum": 254
        },
        "icmpType": {
          "type": "integer",
          "format": "int32",
          "example": 8,
          "description": "Defines the allowed type (from 0 to 254) if the protocol ICMP is chosen. Value null allows all types",
          "minimum": 0,
          "maximum": 254
        },
        "portRangeStart": {
          "type": "integer",
          "format": "int32",
          "example": 8,
          "description": "Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd value null to allow all ports",
          "minimum": 1,
          "maximum": 65534
        },
        "portRangeEnd": {
          "type": "integer",
          "format": "int32",
          "example": 8,
          "description": "Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd null to allow all ports",
          "minimum": 1,
          "maximum": 65534
        }
      }
    },
    "IPFailover": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "nicUuid": {
          "type": "string"
        }
      }
    },
    "LanEntities": {
      "type": "object",
      "properties": {
        "nics": {
          "$ref": "#/definitions/LanNics"
        }
      }
    },
    "LanNics": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Nic"
          }
        }
      }
    },
    "LanProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "A name of that resource"
        },
        "ipFailover": {
          "type": "array",
          "example": "{ \"ipFailover\": [ { \"ip\": \"192.18.2.231\", \"nicUuid\": \"3c11273c-b3e1-4ca3-8134-84fd2dd4ebec\"} ] }",
          "description": "IP failover configurations for lan",
          "items": {
            "$ref": "#/definitions/IPFailover"
          }
        },
        "pcc": {
          "type": "string",
          "example": "3c11273c-b3e1-4ca3-8134-84fd2dd4ebec",
          "description": "Unique identifier of the private cross connect the given LAN is connected to if any"
        },
        "public": {
          "type": "boolean",
          "example": true,
          "description": "Does this LAN faces the public Internet or not"
        }
      }
    },
    "Lan": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "lan",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/LanProperties"
        },
        "entities": {
          "$ref": "#/definitions/LanEntities"
        }
      }
    },
    "LanPost": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "lan",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "entities": {
          "$ref": "#/definitions/LanEntities"
        },
        "properties": {
          "$ref": "#/definitions/LanPropertiesPost"
        }
      }
    },
    "Lans": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "$ref": "#/definitions/Lan"
        }
      }
    },
    "Loadbalancer": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "loadbalancer",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/LoadbalancerProperties"
        },
        "entities": {
          "$ref": "#/definitions/LoadbalancerEntities"
        }
      }
    },
    "LoadbalancerEntities": {
      "type": "object",
      "properties": {
        "balancednics": {
          "$ref": "#/definitions/BalancedNics"
        }
      }
    },
    "LoadbalancerProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "A name of that resource"
        },
        "ip": {
          "type": "string",
          "example": "22.231.113.64",
          "description": "IPv4 address of the loadbalancer. All attached NICs will inherit this IP. Leaving value null will assign IP automatically",
          "enum": [
            "@Valid IP address@",
            "null"
          ]
        },
        "dhcp": {
          "type": "boolean",
          "example": true,
          "description": "Indicates if the loadbalancer will reserve an IP using DHCP"
        }
      }
    },
    "Loadbalancers": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Loadbalancer"
          }
        }
      }
    },
    "Nic": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "nic",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/NicProperties"
        },
        "entities": {
          "$ref": "#/definitions/NicEntities"
        }
      }
    },
    "NicEntities": {
      "type": "object",
      "properties": {
        "firewallrules": {
          "$ref": "#/definitions/FirewallRules"
        }
      }
    },
    "NicProperties": {
      "type": "object",
      "required": [
        "lan"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "A name of that resource"
        },
        "mac": {
          "type": "string",
          "example": "00:0a:95:9d:68:16",
          "description": "The MAC address of the NIC",
          "readOnly": true
        },
        "ips": {
          "type": "array",
          "description": "Collection of IP addresses assigned to a nic. Explicitly assigned public IPs need to come from reserved IP blocks, Passing value null or empty array will assign an IP address automatically.",
          "items": {
            "type": "string"
          }
        },
        "dhcp": {
          "type": "boolean",
          "example": true,
          "description": "Indicates if the nic will reserve an IP using DHCP"
        },
        "lan": {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "description": "The LAN ID the NIC will sit on. If the LAN ID does not exist it will be implicitly created"
        },
        "firewallActive": {
          "type": "boolean",
          "example": false,
          "description": "Activate or deactivate the firewall. By default an active firewall without any defined rules will block all incoming network traffic except for the firewall rules that explicitly allows certain protocols, ip addresses and ports."
        },
        "nat": {
          "type": "boolean",
          "example": true,
          "description": "Indicates if NAT is enabled on this NIC"
        }
      }
    },
    "Nics": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Nic"
          }
        }
      }
    },
    "ResourceReference": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier"
        },
        "type": {
          "type": "string",
          "example": "resource",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        }
      }
    },
    "ServerEntities": {
      "type": "object",
      "properties": {
        "cdroms": {
          "$ref": "#/definitions/Cdroms"
        },
        "volumes": {
          "$ref": "#/definitions/AttachedVolumes"
        },
        "nics": {
          "$ref": "#/definitions/Nics"
        }
      }
    },
    "ServerProperties": {
      "type": "object",
      "required": [
        "cores",
        "ram"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "A name of that resource"
        },
        "cores": {
          "type": "integer",
          "format": "int32",
          "example": 4,
          "description": "The total number of cores for the server"
        },
        "ram": {
          "type": "integer",
          "format": "int32",
          "example": 4096,
          "description": "The amount of memory for the server in MB, e.g. 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB."
        },
        "availabilityZone": {
          "type": "string",
          "example": "AUTO",
          "description": "The availability zone in which the server should exist",
          "enum": [
            "AUTO",
            "ZONE_1",
            "ZONE_2"
          ]
        },
        "vmState": {
          "type": "string",
          "example": "RUNNING",
          "description": "Status of the virtual Machine",
          "readOnly": true,
          "enum": [
            "NOSTATE",
            "RUNNING",
            "BLOCKED",
            "PAUSED",
            "SHUTDOWN",
            "SHUTOFF",
            "CRASHED"
          ]
        },
        "bootCdrom": {
          "$ref": "#/definitions/ResourceReference"
        },
        "bootVolume": {
          "$ref": "#/definitions/ResourceReference"
        },
        "cpuFamily": {
          "type": "string",
          "example": "AMD_OPTERON",
          "description": "Cpu family of pserver"
        }
      }
    },
    "GroupEntities": {
      "type": "object",
      "properties": {
        "users": {
          "$ref": "#/definitions/GroupMembers"
        },
        "resources": {
          "$ref": "#/definitions/ResourceGroups"
        }
      }
    },
    "S3KeyProperties": {
      "type": "object",
      "properties": {
        "secretKey": {
          "type": "string",
          "example": "tFVkUARsoeCdntQs2jVSyGG6TMPfPZ+ghnsWj/gG",
          "description": "secret of the s3 key",
          "readOnly": true
        },
        "active": {
          "type": "boolean",
          "description": "denotes if the s3 key is active or not"
        }
      }
    },
    "GroupUsers": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "groups",
          "description": "The type of the resource",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Group"
          }
        }
      },
      "description": "collection of groups a user is member of"
    },
    "Group": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "group",
          "description": "The type of the resource",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v5/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/GroupProperties"
        },
        "entities": {
          "$ref": "#/definitions/GroupEntities"
        }
      }
    },
    "S3Key": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "group",
          "description": "The type of the resource",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v5/um/users/15f67991-0f51-4efc-a8ad-ef1fb31a480c/s3keys/78fa888e106456c1482d",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/S3KeyMetadata"
        },
        "properties": {
          "$ref": "#/definitions/S3KeyProperties"
        }
      }
    },
    "Groups": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "groups",
          "description": "The type of the resource",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v5/um/groups",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Group"
          }
        }
      }
    },
    "ResourceEntities": {
      "type": "object",
      "properties": {
        "groups": {
          "$ref": "#/definitions/ResourceGroups"
        }
      }
    },
    "ResourceGroups": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of the resource",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Resource"
          }
        }
      },
      "description": "Resources assigned to this group."
    },
    "Resource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "group",
          "description": "The type of the resource",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/ResourceProperties"
        },
        "entities": {
          "$ref": "#/definitions/ResourceEntities"
        }
      },
      "description": "datacenter resource representation"
    },
    "ResourcesUsers": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of the resource",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Resource"
          }
        }
      },
      "description": "Resources owned by a user."
    },
    "UserMetadata": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "example": "45480eb3fbfc31f1d916c1eaa4abdcc3",
          "description": "Resource's Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11 . Entity Tag is also added as an 'ETag response header to requests which don't use 'depth' parameter. ",
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "time of creation of the user",
          "readOnly": true
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "time of last login by the user",
          "readOnly": true
        }
      }
    },
    "ResourceProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name of the resource"
        },
        "secAuthProtection": {
          "type": "boolean",
          "example": true,
          "description": "Boolean value representing if the resource is multi factor protected or not e.g. using two factor protection. Currently only Data Centers and Snapshots are allowed to be multi factor protected, The value of attribute if null is intentional and it means that the resource doesn't support multi factor protection at all."
        }
      }
    },
    "UserProperties": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "description": "first name of the user"
        },
        "lastname": {
          "type": "string",
          "description": "last name of the user"
        },
        "email": {
          "type": "string",
          "description": "email address of the user"
        },
        "administrator": {
          "type": "boolean",
          "description": "indicates if the user has admin rights or not"
        },
        "forceSecAuth": {
          "type": "boolean",
          "description": "indicates if secure authentication should be forced on the user or not"
        },
        "secAuthActive": {
          "type": "boolean",
          "description": "indicates if secure authentication is active for the user or not"
        },
        "s3CanonicalUserId": {
          "type": "string",
          "description": "Canonical (S3) id of the user for a given identity"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "user",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/UserMetadata"
        },
        "properties": {
          "$ref": "#/definitions/UserProperties"
        },
        "entities": {
          "$ref": "#/definitions/UsersEntities"
        }
      }
    },
    "UsersEntities": {
      "type": "object",
      "properties": {
        "owns": {
          "$ref": "#/definitions/ResourcesUsers"
        },
        "groups": {
          "$ref": "#/definitions/GroupUsers"
        }
      }
    },
    "GroupMembers": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/users",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      }
    },
    "GroupProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "A name of that resource"
        },
        "createDataCenter": {
          "type": "boolean",
          "description": "create data center privilege"
        },
        "createSnapshot": {
          "type": "boolean",
          "description": "create snapshot privilege"
        },
        "reserveIp": {
          "type": "boolean",
          "description": "reserve ip block privilege"
        },
        "accessActivityLog": {
          "type": "boolean",
          "description": "activity log access privilege"
        },
        "createPcc": {
          "type": "boolean",
          "description": "create pcc privilege"
        },
        "s3Privilege": {
          "type": "boolean",
          "description": "S3 privilege"
        },
        "createBackupUnit": {
          "type": "boolean",
          "description": "create backup unit privilege"
        },
        "createInternetAccess": {
          "type": "boolean",
          "description": "create internet access privilege"
        },
        "createK8sCluster": {
          "type": "boolean",
          "description": "create kubernetes cluster privilege"
        }
      }
    },
    "GroupShare": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "resource",
          "description": "resource as generic type",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v5/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c/shares/17faab13-13abc-4efc-a8ad-ef1fb31a481b",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/GroupShareProperties"
        }
      }
    },
    "GroupShareProperties": {
      "type": "object",
      "properties": {
        "editPrivilege": {
          "type": "boolean",
          "description": "edit privilege on a resource"
        },
        "sharePrivilege": {
          "type": "boolean",
          "description": "share privilege on a resource"
        }
      }
    },
    "GroupShares": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "shares",
          "description": "Share representing groups and resource relationship",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v5/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c/shares",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/GroupShare"
          }
        }
      }
    },
    "Images": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Image"
          }
        }
      }
    },
    "IpBlock": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "ipblock",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/IpBlockProperties"
        }
      }
    },
    "IpBlockProperties": {
      "type": "object",
      "required": [
        "location",
        "size"
      ],
      "properties": {
        "ips": {
          "type": "array",
          "example": "[\"22.231.113.64\", \"22.231.113.65\", \"22.231.113.66\"]",
          "description": "A collection of IPs associated with the IP Block",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "example": "us/las",
          "description": "Location of that IP Block. Property cannot be modified after creation (disallowed in update requests)"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 5,
          "description": "The size of the IP block"
        },
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "A name of that resource"
        },
        "ipConsumers": {
          "type": "array",
          "example": "{ \"ipConsumers\": [ { \"ip\" : \"192.18.2.11\", \"mac\" : \"02:01:3f:52:6e:57\", \"nicId\" : \"0e8ee463-1174-46f2-87ba-a5c79c14d8e5\", \"serverId\" : \"e6a3466f-8d6e-4cb6-8001-f4e245f222b7\", \"serverName\" : \"Unnamed Server\", \"datacenterId\" : \"6e54a9ec-aace-4176-8ee4-1c3a704fccfc\", \"datacenterName\" : \"IpConsumerDC\"} ] }",
          "description": "Read-Only attribute. Lists consumption detail of an individual ip",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/IpConsumer"
          }
        }
      }
    },
    "IpBlocks": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/IpBlock"
          }
        }
      }
    },
    "LanPropertiesPost": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "A name of that resource"
        },
        "public": {
          "type": "boolean",
          "example": true,
          "description": "Does this LAN faces the public Internet or not"
        }
      }
    },
    "LocationProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "A name of that resource"
        },
        "features": {
          "type": "array",
          "example": "[SSD]",
          "description": "List of features supported by the location",
          "readOnly": true,
          "items": {
            "type": "string",
            "enum": [
              "SSD",
              "SSD_STORAGE_ZONING"
            ]
          }
        },
        "imageAliases": {
          "type": "array",
          "description": "List of image aliases available for the location",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Location": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "location",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/LocationProperties"
        }
      }
    },
    "Locations": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Location"
          }
        }
      }
    },
    "ConnectableDatacenter": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "Peer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "datacenterId": {
          "type": "string"
        },
        "datacenterName": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "IpConsumer": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "mac": {
          "type": "string"
        },
        "nicId": {
          "type": "string"
        },
        "serverId": {
          "type": "string"
        },
        "serverName": {
          "type": "string"
        },
        "datacenterId": {
          "type": "string"
        },
        "datacenterName": {
          "type": "string"
        }
      }
    },
    "PrivateCrossConnectProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "A name of that resource"
        },
        "description": {
          "type": "string",
          "example": "Private Cross-Connect between datacenter 'A' and datacenter 'B' ",
          "description": "Human readable description"
        },
        "peers": {
          "type": "array",
          "example": "{ \"peers\": [ { \"id\": \"<lan-id>\", \"name\": \"<lan-name>\", \"datacenterId\": \"<dc-uuid>\",  \"datacenterName\": \"<dc-name>\", \"location\": \"<de/fra>\"} ] }",
          "description": "Read-Only attribute. Lists LAN's joined to this private cross connect",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Peer"
          }
        },
        "connectableDatacenters": {
          "type": "array",
          "example": "{ \"connectableDatacenters\": [ { \"id\": \"<dc-id>\", \"name\": \"<dc-name>\", \"location\": \"<de/fra>\"} ] }",
          "description": "Read-Only attribute. Lists datacenters that can be joined to this private cross connect",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ConnectableDatacenter"
          }
        }
      }
    },
    "PrivateCrossConnect": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "pcc",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/PrivateCrossConnectProperties"
        }
      }
    },
    "PrivateCrossConnects": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PrivateCrossConnect"
          }
        }
      }
    },
    "RequestStatus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "request-status",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/RequestStatusMetadata"
        }
      }
    },
    "RequestStatusMetadata": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "QUEUED",
            "RUNNING",
            "DONE",
            "FAILED"
          ]
        },
        "message": {
          "type": "string"
        },
        "etag": {
          "type": "string",
          "example": "45480eb3fbfc31f1d916c1eaa4abdcc3",
          "description": "Resource's Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11 . Entity Tag is also added as an 'ETag response header to requests which don't use 'depth' parameter. ",
          "readOnly": true
        },
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestTarget"
          }
        }
      }
    },
    "RequestTarget": {
      "type": "object",
      "properties": {
        "target": {
          "$ref": "#/definitions/ResourceReference"
        },
        "status": {
          "type": "string",
          "enum": [
            "QUEUED",
            "RUNNING",
            "DONE",
            "FAILED"
          ]
        }
      }
    },
    "Request": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "request",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/RequestMetadata"
        },
        "properties": {
          "$ref": "#/definitions/RequestProperties"
        }
      }
    },
    "RequestMetadata": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The last time the resource was created",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "example": "user@example.com",
          "description": "The user who created the resource.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "example": "45480eb3fbfc31f1d916c1eaa4abdcc3",
          "description": "Resource's Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11 . Entity Tag is also added as an 'ETag response header to requests which don't use 'depth' parameter. ",
          "readOnly": true
        },
        "requestStatus": {
          "$ref": "#/definitions/RequestStatus"
        }
      }
    },
    "RequestProperties": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "body": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "Requests": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "requests",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Request"
          }
        }
      }
    },
    "Resources": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of the resource",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v5/um/resources",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Resource"
          }
        }
      },
      "description": "Collection to represent the resource"
    },
    "Info": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "format": "uri",
          "description": "API entry point",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "example": "CLOUD API",
          "description": "Name of the API",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "example": "1.0",
          "description": "Version of the API",
          "readOnly": true
        }
      }
    },
    "Server": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "server",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/ServerProperties"
        },
        "entities": {
          "$ref": "#/definitions/ServerEntities"
        }
      }
    },
    "Servers": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Server"
          }
        }
      }
    },
    "SnapshotProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "A name of that resource"
        },
        "description": {
          "type": "string",
          "example": "Image/Snapshot of Ubuntu ",
          "description": "Human readable description"
        },
        "location": {
          "type": "string",
          "example": "us/las",
          "description": "Location of that image/snapshot. ",
          "readOnly": true
        },
        "size": {
          "type": "number",
          "example": 100,
          "description": "The size of the image in GB",
          "readOnly": true
        },
        "secAuthProtection": {
          "type": "boolean",
          "example": true,
          "description": "Boolean value representing if the snapshot requires extra protection e.g. two factor protection"
        },
        "cpuHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of CPU hot plug (no reboot required)"
        },
        "cpuHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of CPU hot unplug (no reboot required)"
        },
        "ramHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of memory hot plug (no reboot required)"
        },
        "ramHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of memory hot unplug (no reboot required)"
        },
        "nicHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of nic hot plug (no reboot required)"
        },
        "nicHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of nic hot unplug (no reboot required)"
        },
        "discVirtioHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of Virt-IO drive hot plug (no reboot required)"
        },
        "discVirtioHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of Virt-IO drive hot unplug (no reboot required). This works only for non-Windows virtual Machines."
        },
        "discScsiHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of SCSI drive hot plug (no reboot required)"
        },
        "discScsiHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of SCSI drive hot unplug (no reboot required). This works only for non-Windows virtual Machines."
        },
        "licenceType": {
          "type": "string",
          "example": "LINUX",
          "description": "OS type of this Snapshot",
          "enum": [
            "UNKNOWN",
            "WINDOWS",
            "WINDOWS2016",
            "LINUX",
            "OTHER"
          ]
        }
      }
    },
    "Snapshot": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "snapshot",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/SnapshotProperties"
        }
      }
    },
    "Snapshots": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Snapshot"
          }
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      }
    },
    "S3Keys": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of the resource",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/s3keys",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/S3Key"
          }
        }
      }
    },
    "Volumes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Volume"
          }
        }
      }
    },
    "BackupUnitProperties": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "BackupUnitName",
          "description": "A name of that resource (only alphanumeric characters are acceptable)"
        },
        "password": {
          "type": "string",
          "example": "mypass123",
          "description": "the password associated to that resource"
        },
        "email": {
          "type": "string",
          "example": "email@email.com",
          "description": "The email associated with the backup unit. Bear in mind that this email does not be the same email as of the user."
        }
      }
    },
    "BackupUnit": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created",
          "readOnly": true,
          "enum": [
            "backupunit"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/BackupUnitProperties"
        }
      }
    },
    "BackupUnitSSO": {
      "type": "object",
      "properties": {
        "ssoUrl": {
          "type": "string",
          "example": "https://<hostname>/?jwt=eyJ0eXAiO...W47AN5-_x7E",
          "description": "The backup unit single sign on url",
          "readOnly": true
        }
      }
    },
    "S3ObjectStorageSSO": {
      "type": "object",
      "properties": {
        "ssoUrl": {
          "type": "string",
          "example": "https://<hostname>:port/ssosecurelogin.htm?user=dcf5702f-9353-47AN5-_x7E.....htm",
          "description": "The S3 object storage single sign on url",
          "readOnly": true
        }
      }
    },
    "BackupUnits": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created",
          "readOnly": true,
          "enum": [
            "backupunit"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/BackupUnit"
          }
        }
      }
    },
    "LabelProperties": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "example": "environment",
          "description": "A Label Key"
        },
        "value": {
          "type": "string",
          "example": "production",
          "description": "A Label Value"
        },
        "resourceId": {
          "type": "string",
          "example": "700e1cab-99b2-4c30-ba8c-1d273ddba022",
          "description": "The id of the resource"
        },
        "resourceType": {
          "type": "string",
          "example": "datacenter",
          "description": "The type of the resource on which the label is applied."
        },
        "resourceHref": {
          "type": "string",
          "example": "https://<hostname>/datacenters/700e1cab-99b2-4c30-ba8c-1d273ddba022",
          "description": "URL to the Resource (absolute path) on which the label is applied."
        }
      }
    },
    "Label": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "urn:label:datacenter:700e1cab-99b2-4c30-ba8c-1d273ddba022:environment",
          "description": "Label is identified using standard URN.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created",
          "readOnly": true,
          "enum": [
            "label"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/NoStateMetaData"
        },
        "properties": {
          "$ref": "#/definitions/LabelProperties"
        }
      }
    },
    "Labels": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "labels",
          "description": "Unique representation for Label as a collection of resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of resource within a collection",
          "readOnly": true,
          "enum": [
            "label"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the collection representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "LabelResourceProperties": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "example": "environment",
          "description": "A Label Key"
        },
        "value": {
          "type": "string",
          "example": "production",
          "description": "A Label Value"
        }
      }
    },
    "LabelResource": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "environment",
          "description": "Label on a resource is identified using label key.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created",
          "readOnly": true,
          "enum": [
            "label"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/NoStateMetaData"
        },
        "properties": {
          "$ref": "#/definitions/LabelResourceProperties"
        }
      }
    },
    "LabelResources": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "labels",
          "description": "Unique representation for Label as a collection on a resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of resource within a collection",
          "readOnly": true,
          "enum": [
            "label"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the collection representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/LabelResource"
          }
        }
      }
    },
    "KubernetesClusterProperties": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "k8s",
          "description": "A Kubernetes Cluster Name. Valid Kubernetes Cluster name must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
        },
        "k8sVersion": {
          "type": "string",
          "example": "1.15.4",
          "description": "The kubernetes version in which a cluster is running. This imposes restrictions on what kubernetes versions can be run in a cluster's nodepools. Additionally, not all kubernetes versions are viable upgrade targets for all prior versions."
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/KubernetesMaintenanceWindow"
        }
      }
    },
    "KubernetesCluster": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object",
          "readOnly": true,
          "enum": [
            "k8s"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/KubernetesClusterProperties"
        },
        "entities": {
          "$ref": "#/definitions/KubernetesClusterEntities"
        }
      }
    },
    "KubernetesClusterEntities": {
      "type": "object",
      "properties": {
        "nodepools": {
          "$ref": "#/definitions/KubernetesNodePools"
        }
      }
    },
    "KubernetesClusters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "k8s",
          "description": "Unique representation for Kubernetes Cluster as a collection on a resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of resource within a collection",
          "readOnly": true,
          "enum": [
            "k8s"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the collection representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/KubernetesCluster"
          }
        }
      }
    },
    "KubernetesConfigProperties": {
      "type": "object",
      "properties": {
        "kubeconfig": {
          "type": "string",
          "example": "<FILE>",
          "description": "A Kubernetes Config file data"
        }
      }
    },
    "KubernetesMaintenanceWindow": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "dayOfTheWeek": {
          "type": "string",
          "example": "Monday",
          "description": "The day of the week for a maintenance window.",
          "enum": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ]
        },
        "time": {
          "type": "string",
          "example": "13:00:00",
          "description": "The time to use for a maintenance window. Accepted formats are: HH:mm:ss; HH:mm:ss\"Z\"; HH:mm:ssZ. This time may varies by 15 minutes."
        }
      }
    },
    "KubernetesAutoScaling": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "minNodeCount": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "The minimum number of worker nodes that the managed node group can scale in. Should be set together with 'maxNodeCount'. Value for this attribute must be greater than equal to 1 and less than equal to maxNodeCount."
        },
        "maxNodeCount": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "The maximum number of worker nodes that the managed node pool can scale-out. Should be set together with 'minNodeCount'. Value for this attribute must be greater than equal to 1 and minNodeCount."
        }
      }
    },
    "KubernetesConfig": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object",
          "readOnly": true,
          "enum": [
            "kubeconfig"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/KubernetesConfigProperties"
        }
      }
    },
    "KubernetesNodePoolProperties": {
      "type": "object",
      "required": [
        "name",
        "datacenterId",
        "nodeCount",
        "cpuFamily",
        "coresCount",
        "ramSize",
        "availabilityZone",
        "storageType",
        "storageSize"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "k8s-node-pool",
          "description": "A Kubernetes Node Pool Name. Valid Kubernetes Node Pool name must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
        },
        "datacenterId": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907521",
          "description": "A valid uuid of the datacenter on which user has access"
        },
        "nodeCount": {
          "type": "integer",
          "example": 2,
          "description": "Number of nodes part of the Node Pool"
        },
        "cpuFamily": {
          "type": "string",
          "example": "AMD_OPTERON",
          "description": "A valid cpu family name"
        },
        "coresCount": {
          "type": "integer",
          "example": 4,
          "description": "Number of cores for node"
        },
        "ramSize": {
          "type": "integer",
          "example": 2048,
          "description": "RAM size for node, minimum size 2048MB is recommended. Ram size must be set to multiple of 1024MB."
        },
        "availabilityZone": {
          "type": "string",
          "example": "AUTO",
          "description": "The availability zone in which the server should exist",
          "enum": [
            "AUTO",
            "ZONE_1",
            "ZONE_2"
          ]
        },
        "storageType": {
          "type": "string",
          "example": "HDD",
          "description": "Hardware type of the volume",
          "enum": [
            "HDD",
            "SSD"
          ]
        },
        "storageSize": {
          "type": "integer",
          "example": 100,
          "description": "The size of the volume in GB. The size should be greater than 10GB."
        },
        "k8sVersion": {
          "type": "string",
          "example": "1.15.4",
          "description": "The kubernetes version in which a nodepool is running. This imposes restrictions on what kubernetes versions can be run in a cluster's nodepools. Additionally, not all kubernetes versions are viable upgrade targets for all prior versions."
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/KubernetesMaintenanceWindow"
        },
        "autoScaling": {
          "$ref": "#/definitions/KubernetesAutoScaling"
        },
        "lans": {
          "type": "array",
          "description": "array of additional LANs attached to worker nodes",
          "items": {
            "$ref": "#/definitions/KubernetesNodePoolLan"
          }
        }
      }
    },
    "KubernetesNodePool": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object",
          "readOnly": true,
          "enum": [
            "nodepool"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/KubernetesNodePoolProperties"
        }
      }
    },
    "KubernetesNodePools": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527/nodepools",
          "description": "Unique representation for Kubernetes Node Pool as a collection on a resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of resource within a collection",
          "readOnly": true,
          "enum": [
            "nodepool"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the collection representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/KubernetesNodePool"
          }
        }
      }
    },
    "KubernetesNodeProperties": {
      "type": "object",
      "required": [
        "name",
        "publicIP",
        "k8sVersion"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "k8s-node",
          "description": "A Kubernetes Node Name."
        },
        "publicIP": {
          "type": "string",
          "example": "192.168.23.2",
          "description": "A valid public IP."
        },
        "k8sVersion": {
          "type": "string",
          "example": "1.15.4",
          "description": "The kubernetes version in which a nodepool is running. This imposes restrictions on what kubernetes versions can be run in a cluster's nodepools. Additionally, not all kubernetes versions are viable upgrade targets for all prior versions."
        }
      }
    },
    "KubernetesNode": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object",
          "readOnly": true,
          "enum": [
            "nodepool"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path)",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/KubernetesNodeMetadata"
        },
        "properties": {
          "$ref": "#/definitions/KubernetesNodeProperties"
        }
      }
    },
    "KubernetesNodes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527/nodepools",
          "description": "Unique representation for Kubernetes Node Pool as a collection on a resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of resource within a collection",
          "readOnly": true,
          "enum": [
            "nodepool"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the collection representation (absolute path)",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in that collection",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/KubernetesNode"
          }
        }
      }
    },
    "KubernetesNodePoolLan": {
      "type": "object",
      "required": [
        "lanId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The LAN ID of an existing LAN at the realted datacenter",
          "example": "3"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "httpStatus": {
          "type": "integer",
          "format": "int32",
          "example": 400,
          "description": "HTTP status code of the operation",
          "readOnly": true
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        }
      }
    },
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "string",
          "example": "123",
          "description": "Application internal error code",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "example": "Error message example",
          "description": "Human readable message",
          "readOnly": true
        }
      }
    },
    "Type": {
      "type": "string",
      "enum": [
        "datacenter",
        "server",
        "volume",
        "nic",
        "loadbalancer",
        "location",
        "firewall-rule",
        "image",
        "snapshot",
        "lan",
        "ipblock",
        "pcc",
        "contract",
        "user",
        "group",
        "collection",
        "resource",
        "request",
        "request-status",
        "s3key",
        "backupunit",
        "label",
        "k8s",
        "nodepool"
      ]
    }
  },
  "parameters": {
    "depth": {
      "name": "depth",
      "in": "query",
      "description": "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\t- depth=0: only direct properties are included. Children (servers etc.) are not included\n\t- depth=1: direct properties and children references are included\n\t- depth=2: direct properties and children properties are included\n\t- depth=3: direct properties and children properties and children's children are included\n\t- depth=... and so on",
      "required": false,
      "type": "integer",
      "default": 0,
      "maximum": 10,
      "minimum": 0,
      "format": "int32"
    },
    "pretty": {
      "name": "pretty",
      "in": "query",
      "description": "Controls whether response is pretty-printed (with indentation and new lines)",
      "required": false,
      "type": "boolean",
      "default": true
    },
    "contractNumber": {
      "name": "X-Contract-Number",
      "in": "header",
      "description": "Users having more than 1 contract need to provide contract number, against which all API requests should be executed",
      "required": false,
      "type": "integer",
      "format": "int32"
    }
  },
  "responses": {
    "apiError": {
      "description": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient permissions), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "apiErrorK8sVersion": {
      "description": "Any erroneous status code: 401 (auth error), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type), 422 (validation error), 500 (server error), 503 (maintenance)",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}
